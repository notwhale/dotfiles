set -g default-terminal "${TERM}"
# set -g default-terminal "screen-256color"
set -sg terminal-overrides ",*:RGB"
# set -as terminal-features ',*:clipboard'
# set -as terminal-features ',*256col*:Tc'

set -g update-environment "SSH_AUTH_SOCK \
                           SSH_CONNECTION \
                           TERM \
                           TERM_PROGRAM \
                           DISPLAY \
                           EDITOR"

set -g base-index 1
set -g pane-base-index 1

set -g escape-time 0
set -g repeat-time 1000
set -g history-limit 100000
set -s focus-events on

set -g set-titles on
set -g renumber-windows on
set -g automatic-rename off
# set -g automatic-rename-format '#{b:pane_current_path}'

set -g monitor-activity on
set -g visual-activity off
set -g exit-empty off
set -g detach-on-destroy off

# copy mode
set -g mouse on
set -s set-clipboard on
set -g status-keys vi
setw -g mode-keys vi

# prefix
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix
# bind -n C-a send-keys C-a

bind Enter copy-mode
bind b list-buffers
bind B choose-buffer
bind P paste-buffer

unbind -T copy-mode-vi MouseDragEnd1Pane
# bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel
bind -T copy-mode-vi y send -X copy-pipe-and-cancel
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
# bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel

# Popup scratchpad by M-`
bind -n -N 'Toggle scratchpad window' M-` if-shell -F '#{==:#{session_name},scratchpad}' {
  detach-client
} {
  display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 80% -E 'tmux attach-session -t scratchpad || tmux new-session -s scratchpad'
}

# open new windows and panes in the current path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

bind '=' setw synchronize-panes
bind C-l send-keys 'C-l'
bind Tab switch-client -l # last session
bind '`' select-window -l # last window

# pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -T copy-mode-vi M-h resize-pane -L 5
bind -T copy-mode-vi M-j resize-pane -D 5
bind -T copy-mode-vi M-k resize-pane -U 5
bind -T copy-mode-vi M-l resize-pane -R 5

# resize panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 5'

# move windows
bind -n M-S-Left swap-window -t -1\; select-window -t -1
bind -n M-S-Right swap-window -t +1\; select-window -t +1

# tmux config
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
bind e new-window -n "~/.tmux.conf" "\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

# colors
bg=#282828
gray_light=#a89984
gray_dark=#928374
yellow_light=#fabd2f
yellow_dark=#d79921

# status
set -g status-interval 3
set -g status-position top
set -g status-bg default
set -g status-style "fg=${gray_dark},bg=default"
set -g status-left " "
set -g status-right "#[fg=${gray_dark}][#S] %Y-%m-%d %H:%M"
set -g window-status-style "bg=default"
set -g window-status-current-style "fg=${gray_light},bold"
set -g window-status-last-style "bg=default"
set -g window-status-activity-style "bg=default"
set -g window-status-bell-style "bg=default"
set -g message-style "fg=${bg},bg=${yellow_dark}"
set -g mode-style "fg=${bg},bg=${yellow_dark}"
set -g pane-border-style "fg=${gray_dark},bg=default"
set -g pane-active-border-style "fg=${yellow_light},bg=default"

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @yank_selection 'clipboard' # 'primary' or 'secondary' or 'clipboard'
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'
set -g @yank_action 'copy-pipe'
set -g @yank_with_mouse on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

