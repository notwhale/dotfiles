# homebrew
# envs
export DOCKER_DEFAULT_PLATFORM=linux/amd64

# aliases
alias docker='podman'

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - zsh)"

# Switch to ARM homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"
# Switch to x86_64 homebrew
# eval "$(/usr/local/bin/brew shellenv)"
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi

# ssh agent
# SSH_AUTH_SOCK=$(launchctl asuser "${UID:-"$(id -u)"}" launchctl getenv SSH_AUTH_SOCK)
# if test "$SSH_AUTH_SOCK" ; then
#     ln -sf $SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
# fi

# fzf
source <(fzf --zsh)
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
export FZF_DEFAULT_OPTS="--height 50% --layout=default --border"
export FZF_TMUX_OPTS=" -p90%,70% "

# kubectl
source <(kubectl completion zsh)
# kubectl completion zsh > "${fpath[1]}/_kubectl"

# helm
source <(helm completion zsh)
# helm completion zsh > "${fpath[1]}/_helm"

# podman
if type podman &>/dev/null; then
  source <(podman completion zsh)
#  podman completion -f "${fpath[1]}/_podman" zsh
fi

# autosuggestions and highlighting
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
set ZSH_AUTOSUGGEST_USE_ASYNC=true
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
